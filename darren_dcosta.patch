From 0cac8c8a5a4b26db1b90fc1117bb49f96ec4f9b1 Mon Sep 17 00:00:00 2001
From: darrendc <ddcosta@gmail.com>
Date: Mon, 8 Apr 2019 08:23:11 -0400
Subject: [PATCH] whatever

---
 README.md | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/README.md b/README.md
index 19c5039..76d951c 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-# Anagram Detector
+# Anagram Detectors
 
 ## Objectives
 
@@ -22,16 +22,16 @@ listen.match(%w(enlists google inlets banana))
 
 ## Instructions
 
-Once again, this lab is test-driven. Run the test suite to get started. Remember that you can use the `learn/rspec --fail-fast` option to run the tests only up until the first failure, in order to work progressively through the tests. 
+Once again, this lab is test-driven. Run the test suite to get started. Remember that you can use the `learn/rspec --fail-fast` option to run the tests only up until the first failure, in order to work progressively through the tests.
 
-Write your solution in anagram.rb. 
+Write your solution in anagram.rb.
 
 **Hints:**
 
-* Use an `attr_accessor` to create a setter and getter method for the word that the Anagram class instances are initialized with. 
-* How will you determine if one word is an anagram for another? 
-  * You'll need to iterate over the array of words that the `.match` method takes as an argument. You will compare each word of that array to the word that the Anagram class is initialized with. 
-  * To determine if they are anagrams, try determining if they are composed of the same letters. Remember that you can split a word into an array of letters using `some_word.split("")`. You can compare two arrays using the `==`. For example: 
+* Use an `attr_accessor` to create a setter and getter method for the word that the Anagram class instances are initialized with.
+* How will you determine if one word is an anagram for another?
+  * You'll need to iterate over the array of words that the `.match` method takes as an argument. You will compare each word of that array to the word that the Anagram class is initialized with.
+  * To determine if they are anagrams, try determining if they are composed of the same letters. Remember that you can split a word into an array of letters using `some_word.split("")`. You can compare two arrays using the `==`. For example:
 
 ```ruby
 [1, 2, 3] == [1, 2, 3]
@@ -41,12 +41,12 @@ Write your solution in anagram.rb.
 => false
 ```
 
-Two arrays are equal if they contain the same elements, in the same order. Remember that you can `.sort` an arrays elements. This will help in your comparison: 
+Two arrays are equal if they contain the same elements, in the same order. Remember that you can `.sort` an arrays elements. This will help in your comparison:
 
 ```ruby
 [1, 3, 2].sort == [3, 2, 1].sort
 => true
-``` 
+```
 
 ## Resources
 * [StackOverflow](http://stackoverflow.com/) - [Ruby: what does %w(array) mean?](http://stackoverflow.com/questions/1274675/ruby-what-does-warray-mean)
-- 
2.20.1 (Apple Git-117)

